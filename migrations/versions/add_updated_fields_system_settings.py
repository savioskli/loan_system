"""Add updated fields to system settings

Revision ID: add_updated_fields
Revises: 75259a57969d
Create Date: 2024-11-20 22:30:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = 'add_updated_fields'
down_revision = '75259a57969d'
branch_labels = None
depends_on = None

def column_exists(table_name, column_name):
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    columns = [c['name'] for c in inspector.get_columns(table_name)]
    return column_name in columns

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        if not column_exists('system_settings', 'updated_at'):
            batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        if not column_exists('system_settings', 'updated_by'):
            batch_op.add_column(sa.Column('updated_by', sa.Integer(), nullable=True))
            batch_op.create_foreign_key(None, 'staff', ['updated_by'], ['id'])

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('system_settings', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('updated_by')
        batch_op.drop_column('updated_at')

    # ### end Alembic commands ###
